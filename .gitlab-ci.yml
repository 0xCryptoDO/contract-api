cache:
  paths:
    - node_modules/
    - .yarn

before_script:
  - apt-get update -qq && apt-get install

stages:
  - deploy

deploy-staging:
    stage: deploy
    environment:
      name: staging
      url: https://contract-api.staging.cryptodo.app
    variables:
      DOCKER_TLS_CERTDIR: "/certs"
    image: kroniak/ssh-client:latest
    services:
      - kroniak/ssh-client:latest
    script:
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - echo "$SSH_KEY" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa 
      - sed -i "s/__DB_USERNAME__/$DB_USERNAME/" docker-compose.staging.yml
      - sed -i "s/__DB_PASSWORD__/$DB_PASSWORD/" docker-compose.staging.yml
      - sed -i "s/__DB_HOST__/$DB_HOST/" docker-compose.staging.yml
      - sed -i "s/__DB_PORT__/$DB_PORT/" docker-compose.staging.yml
      - sed -i "s/__JWT_SECRET__/$JWT_SECRET/" docker-compose.staging.yml
      - sed -i "s/__BSCSCAN_API_KEY__/$BSCSCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__ETHERSCAN_API_KEY__/$ETHERSCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__POLYGONSCAN_API_KEY__/$POLYGONSCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__AURORASCAN_API_KEY__/$AURORASCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__AVALANCHESCAN_API_KEY__/$AVALANCHESCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__OPTIMISMSCAN_API_KEY__/$OPTIMISMSCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__OKCSCAN_API_KEY__/$OKCSCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__BITGERTSCAN_API_KEY__/$BITGERTSCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__BITTORRENTSCAN_API_KEY__/$BITTORRENTSCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__FANTOMSCAN_API_KEY__/$FANTOMSCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__CRONOSSCAN_API_KEY__/$CRONOSSCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__ARBITRUMSCAN_API_KEY__/$ARBITRUMSCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__BASESCAN_API_KEY__/$BASESCAN_API_KEY/" docker-compose.staging.yml
      - sed -i "s/__FAUCET_WALLET_PRIVATE_KEY__/$FAUCET_WALLET_PRIVATE_KEY/" docker-compose.staging.yml
      - sed -i "s/__TWITTER_CONSUMER_KEY__/$TWITTER_CONSUMER_KEY/" docker-compose.staging.yml
      - sed -i "s/__TWITTER_CONSUMER_SECRET__/$TWITTER_CONSUMER_SECRET/" docker-compose.staging.yml
      - sed -i "s/__TWITTER_ACCESS_TOKEN_KEY__/$TWITTER_ACCESS_TOKEN_KEY/" docker-compose.staging.yml
      - sed -i "s/__TWITTER_ACCESS_TOKEN_SECRET__/$TWITTER_ACCESS_TOKEN_SECRET/" docker-compose.staging.yml
      - ssh $STAGING_SSH_HOST 'sudo rm -r ~/cryptodo/staging/contract-api'
      - scp -r "$PWD" $STAGING_SSH_HOST:~/cryptodo/staging
      - ssh $STAGING_SSH_HOST 'cd ~/cryptodo/staging/contract-api && sudo docker-compose --file docker-compose.staging.yml up --force-recreate --build -d'
    only:
      - staging

deploy-production:
    stage: deploy
    environment:
      name: production
      url: https://contract-api.cryptodo.app
    variables:
      DOCKER_TLS_CERTDIR: "/certs"
    image: kroniak/ssh-client:latest
    services:
      - kroniak/ssh-client:latest
    script:
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - echo "$SSH_KEY" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa 
      - sed -i "s/__DB_USERNAME__/$DB_USERNAME/" docker-compose.production.yml
      - sed -i "s/__DB_PASSWORD__/$DB_PASSWORD/" docker-compose.production.yml
      - sed -i "s/__DB_HOST__/$DB_HOST/" docker-compose.production.yml
      - sed -i "s/__DB_PORT__/$DB_PORT/" docker-compose.production.yml
      - sed -i "s/__JWT_SECRET__/$JWT_SECRET/" docker-compose.production.yml
      - sed -i "s/__BSCSCAN_API_KEY__/$BSCSCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__ETHERSCAN_API_KEY__/$ETHERSCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__POLYGONSCAN_API_KEY__/$POLYGONSCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__AURORASCAN_API_KEY__/$AURORASCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__AVALANCHESCAN_API_KEY__/$AVALANCHESCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__OPTIMISMSCAN_API_KEY__/$OPTIMISMSCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__OKCSCAN_API_KEY__/$OKCSCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__BITGERTSCAN_API_KEY__/$BITGERTSCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__BITTORRENTSCAN_API_KEY__/$BITTORRENTSCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__FANTOMSCAN_API_KEY__/$FANTOMSCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__CRONOSSCAN_API_KEY__/$CRONOSSCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__ARBITRUMSCAN_API_KEY__/$ARBITRUMSCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__BASESCAN_API_KEY__/$BASESCAN_API_KEY/" docker-compose.production.yml
      - sed -i "s/__FAUCET_WALLET_PRIVATE_KEY__/$FAUCET_WALLET_PRIVATE_KEY/" docker-compose.production.yml
      - sed -i "s/__TWITTER_CONSUMER_KEY__/$TWITTER_CONSUMER_KEY/" docker-compose.production.yml
      - sed -i "s/__TWITTER_CONSUMER_SECRET__/$TWITTER_CONSUMER_SECRET/" docker-compose.production.yml
      - sed -i "s/__TWITTER_ACCESS_TOKEN_KEY__/$TWITTER_ACCESS_TOKEN_KEY/" docker-compose.production.yml
      - sed -i "s/__TWITTER_ACCESS_TOKEN_SECRET__/$TWITTER_ACCESS_TOKEN_SECRET/" docker-compose.production.yml
      - ssh $PRODUCTION_SSH_HOST 'sudo rm -r ~/cryptodo/production/contract-api'
      - scp -r "$PWD" $PRODUCTION_SSH_HOST:~/cryptodo/production
      - ssh $PRODUCTION_SSH_HOST 'cd ~/cryptodo/production/contract-api && sudo docker-compose --file docker-compose.production.yml up --force-recreate --build -d'
    only:
      - main

